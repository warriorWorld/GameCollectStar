{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","squashDuration","maxMoveSpeed","accel","jumpAudio","default","type","AudioClip","onLoad","enabled","accLeft","accRight","xSpeed","minPosX","node","parent","width","maxPosX","jumpAction","setJumpAction","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","touchReceiver","Canvas","instance","onTouchStart","onTouchEnd","onDestroy","off","event","keyCode","macro","KEY","a","left","d","right","touchLoc","getLocation","x","winSize","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","squash","scaleTo","stretch","scaleBack","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","getCenterPos","centerPos","y","height","startMoveAt","pos","setPosition","runAction","stopMove","stopAllActions","update","dt","Math","abs"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY,CAFJ;AAGR;AACAC,sBAAc,CAJN;AAKR;AACAC,wBAAgB,CANR;AAOR;AACAC,sBAAc,CARN;AASR;AACAC,eAAO,CAVC;AAWR;AACAC,mBAAW;AACPC,qBAAS,IADF;AAEPC,kBAAMZ,GAAGa;AAFF;AAZH,KAHP;;AAqBL;AACAC,YAAQ,kBAAY;AAChB,aAAKC,OAAL,GAAe,KAAf;AACA;AACA,aAAKC,OAAL,GAAe,KAAf;AACA,aAAKC,QAAL,GAAgB,KAAhB;AACA;AACA,aAAKC,MAAL,GAAc,CAAd;AACA;AACA,aAAKC,OAAL,GAAe,CAAC,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,KAAlB,GAAwB,CAAvC;AACA,aAAKC,OAAL,GAAe,KAAKH,IAAL,CAAUC,MAAV,CAAiBC,KAAjB,GAAuB,CAAtC;;AAEA;AACA,aAAKE,UAAL,GAAkB,KAAKC,aAAL,EAAlB;;AAEA;AACAzB,WAAG0B,WAAH,CAAeC,EAAf,CAAkB3B,GAAG4B,WAAH,CAAeC,SAAf,CAAyBC,QAA3C,EAAqD,KAAKC,SAA1D,EAAqE,IAArE;AACA/B,WAAG0B,WAAH,CAAeC,EAAf,CAAkB3B,GAAG4B,WAAH,CAAeC,SAAf,CAAyBG,MAA3C,EAAmD,KAAKC,OAAxD,EAAiE,IAAjE;;AAEA,YAAIC,gBAAgBlC,GAAGmC,MAAH,CAAUC,QAAV,CAAmBhB,IAAvC;AACAc,sBAAcP,EAAd,CAAiB,YAAjB,EAA+B,KAAKU,YAApC,EAAkD,IAAlD;AACAH,sBAAcP,EAAd,CAAiB,UAAjB,EAA6B,KAAKW,UAAlC,EAA8C,IAA9C;AACH,KA3CI;;AA6CLC,aA7CK,uBA6CQ;AACT;AACAvC,WAAG0B,WAAH,CAAec,GAAf,CAAmBxC,GAAG4B,WAAH,CAAeC,SAAf,CAAyBC,QAA5C,EAAsD,KAAKC,SAA3D,EAAsE,IAAtE;AACA/B,WAAG0B,WAAH,CAAec,GAAf,CAAmBxC,GAAG4B,WAAH,CAAeC,SAAf,CAAyBG,MAA5C,EAAoD,KAAKC,OAAzD,EAAkE,IAAlE;;AAEA,YAAIC,gBAAgBlC,GAAGmC,MAAH,CAAUC,QAAV,CAAmBhB,IAAvC;AACAc,sBAAcM,GAAd,CAAkB,YAAlB,EAAgC,KAAKH,YAArC,EAAmD,IAAnD;AACAH,sBAAcM,GAAd,CAAkB,UAAlB,EAA8B,KAAKF,UAAnC,EAA+C,IAA/C;AACH,KArDI;AAuDLP,aAvDK,qBAuDMU,KAvDN,EAuDa;AACd,gBAAOA,MAAMC,OAAb;AACI,iBAAK1C,GAAG2C,KAAH,CAASC,GAAT,CAAaC,CAAlB;AACA,iBAAK7C,GAAG2C,KAAH,CAASC,GAAT,CAAaE,IAAlB;AACI,qBAAK9B,OAAL,GAAe,IAAf;AACA,qBAAKC,QAAL,GAAgB,KAAhB;AACA;AACJ,iBAAKjB,GAAG2C,KAAH,CAASC,GAAT,CAAaG,CAAlB;AACA,iBAAK/C,GAAG2C,KAAH,CAASC,GAAT,CAAaI,KAAlB;AACI,qBAAKhC,OAAL,GAAe,KAAf;AACA,qBAAKC,QAAL,GAAgB,IAAhB;AACA;AAVR;AAYH,KApEI;AAsELgB,WAtEK,mBAsEIQ,KAtEJ,EAsEW;AACZ,gBAAOA,MAAMC,OAAb;AACI,iBAAK1C,GAAG2C,KAAH,CAASC,GAAT,CAAaC,CAAlB;AACA,iBAAK7C,GAAG2C,KAAH,CAASC,GAAT,CAAaE,IAAlB;AACI,qBAAK9B,OAAL,GAAe,KAAf;AACA;AACJ,iBAAKhB,GAAG2C,KAAH,CAASC,GAAT,CAAaG,CAAlB;AACA,iBAAK/C,GAAG2C,KAAH,CAASC,GAAT,CAAaI,KAAlB;AACI,qBAAK/B,QAAL,GAAgB,KAAhB;AACA;AARR;AAUH,KAjFI;AAmFLoB,gBAnFK,wBAmFSI,KAnFT,EAmFgB;AACjB,YAAIQ,WAAWR,MAAMS,WAAN,EAAf;AACA,YAAID,SAASE,CAAT,IAAcnD,GAAGoD,OAAH,CAAW9B,KAAX,GAAiB,CAAnC,EAAsC;AAClC,iBAAKN,OAAL,GAAe,KAAf;AACA,iBAAKC,QAAL,GAAgB,IAAhB;AACH,SAHD,MAGO;AACH,iBAAKD,OAAL,GAAe,IAAf;AACA,iBAAKC,QAAL,GAAgB,KAAhB;AACH;AACJ,KA5FI;AA8FLqB,cA9FK,sBA8FOG,KA9FP,EA8Fc;AACf,aAAKzB,OAAL,GAAe,KAAf;AACA,aAAKC,QAAL,GAAgB,KAAhB;AACH,KAjGI;;;AAmGLQ,mBAAe,yBAAY;AACvB;AACA,YAAI4B,SAASrD,GAAGsD,MAAH,CAAU,KAAKhD,YAAf,EAA6BN,GAAGuD,EAAH,CAAM,CAAN,EAAS,KAAKlD,UAAd,CAA7B,EAAwDmD,MAAxD,CAA+DxD,GAAGyD,kBAAH,EAA/D,CAAb;AACA;AACA,YAAIC,WAAW1D,GAAGsD,MAAH,CAAU,KAAKhD,YAAf,EAA6BN,GAAGuD,EAAH,CAAM,CAAN,EAAS,CAAC,KAAKlD,UAAf,CAA7B,EAAyDmD,MAAzD,CAAgExD,GAAG2D,iBAAH,EAAhE,CAAf;AACA;AACA,YAAIC,SAAS5D,GAAG6D,OAAH,CAAW,KAAKtD,cAAhB,EAAgC,CAAhC,EAAmC,GAAnC,CAAb;AACA,YAAIuD,UAAU9D,GAAG6D,OAAH,CAAW,KAAKtD,cAAhB,EAAgC,CAAhC,EAAmC,GAAnC,CAAd;AACA,YAAIwD,YAAY/D,GAAG6D,OAAH,CAAW,KAAKtD,cAAhB,EAAgC,CAAhC,EAAmC,CAAnC,CAAhB;AACA;AACA,YAAIyD,WAAWhE,GAAGiE,QAAH,CAAY,KAAKC,aAAjB,EAAgC,IAAhC,CAAf;AACA;AACA,eAAOlE,GAAGmE,aAAH,CAAiBnE,GAAGoE,QAAH,CAAYR,MAAZ,EAAoBE,OAApB,EAA6BT,MAA7B,EAAqCU,SAArC,EAAgDL,QAAhD,EAA0DM,QAA1D,CAAjB,CAAP;AACH,KAhHI;;AAkHLE,mBAAe,yBAAY;AACvB;AACAlE,WAAGqE,WAAH,CAAeC,UAAf,CAA0B,KAAK5D,SAA/B,EAA0C,KAA1C;AACH,KArHI;;AAuHL6D,kBAAc,wBAAY;AACtB,YAAIC,YAAYxE,GAAGuD,EAAH,CAAM,KAAKnC,IAAL,CAAU+B,CAAhB,EAAmB,KAAK/B,IAAL,CAAUqD,CAAV,GAAc,KAAKrD,IAAL,CAAUsD,MAAV,GAAiB,CAAlD,CAAhB;AACA,eAAOF,SAAP;AACH,KA1HI;;AA4HLG,iBAAa,qBAAUC,GAAV,EAAe;AACxB,aAAK7D,OAAL,GAAe,IAAf;AACA,aAAKG,MAAL,GAAc,CAAd;AACA,aAAKE,IAAL,CAAUyD,WAAV,CAAsBD,GAAtB;AACA,aAAKxD,IAAL,CAAU0D,SAAV,CAAoB,KAAKrD,aAAL,EAApB;AACH,KAjII;;AAmILsD,cAAU,oBAAY;AAClB,aAAK3D,IAAL,CAAU4D,cAAV;AACH,KArII;;AAuIL;AACAC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAI,KAAKlE,OAAT,EAAkB;AACd,iBAAKE,MAAL,IAAe,KAAKT,KAAL,GAAayE,EAA5B;AACH,SAFD,MAEO,IAAI,KAAKjE,QAAT,EAAmB;AACtB,iBAAKC,MAAL,IAAe,KAAKT,KAAL,GAAayE,EAA5B;AACH;AACD;AACA,YAAKC,KAAKC,GAAL,CAAS,KAAKlE,MAAd,IAAwB,KAAKV,YAAlC,EAAiD;AAC7C;AACA,iBAAKU,MAAL,GAAc,KAAKV,YAAL,GAAoB,KAAKU,MAAzB,GAAkCiE,KAAKC,GAAL,CAAS,KAAKlE,MAAd,CAAhD;AACH;;AAED;AACA,aAAKE,IAAL,CAAU+B,CAAV,IAAe,KAAKjC,MAAL,GAAcgE,EAA7B;;AAEA;AACA,YAAK,KAAK9D,IAAL,CAAU+B,CAAV,GAAc,KAAK/B,IAAL,CAAUC,MAAV,CAAiBC,KAAjB,GAAuB,CAA1C,EAA6C;AACzC,iBAAKF,IAAL,CAAU+B,CAAV,GAAc,KAAK/B,IAAL,CAAUC,MAAV,CAAiBC,KAAjB,GAAuB,CAArC;AACA,iBAAKJ,MAAL,GAAc,CAAd;AACH,SAHD,MAGO,IAAI,KAAKE,IAAL,CAAU+B,CAAV,GAAc,CAAC,KAAK/B,IAAL,CAAUC,MAAV,CAAiBC,KAAlB,GAAwB,CAA1C,EAA6C;AAChD,iBAAKF,IAAL,CAAU+B,CAAV,GAAc,CAAC,KAAK/B,IAAL,CAAUC,MAAV,CAAiBC,KAAlB,GAAwB,CAAtC;AACA,iBAAKJ,MAAL,GAAc,CAAd;AACH;AACJ;AAhKI,CAAT","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 主角跳跃高度\n        jumpHeight: 0,\n        // 主角跳跃持续时间\n        jumpDuration: 0,\n        // 辅助形变动作时间\n        squashDuration: 0,\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n        // 跳跃音效资源\n        jumpAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.enabled = false;\n        // 加速度方向开关\n        this.accLeft = false;\n        this.accRight = false;\n        // 主角当前水平方向速度\n        this.xSpeed = 0;\n        // screen boundaries\n        this.minPosX = -this.node.parent.width/2;\n        this.maxPosX = this.node.parent.width/2;\n\n        // 初始化跳跃动作\n        this.jumpAction = this.setJumpAction();\n\n        // 初始化键盘输入监听\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n        \n        var touchReceiver = cc.Canvas.instance.node;\n        touchReceiver.on('touchstart', this.onTouchStart, this);\n        touchReceiver.on('touchend', this.onTouchEnd, this);\n    },\n\n    onDestroy () {\n        // 取消键盘输入监听\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n        \n        var touchReceiver = cc.Canvas.instance.node;\n        touchReceiver.off('touchstart', this.onTouchStart, this);\n        touchReceiver.off('touchend', this.onTouchEnd, this);\n    },\n\n    onKeyDown (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n            case cc.macro.KEY.left:\n                this.accLeft = true;\n                this.accRight = false;\n                break;\n            case cc.macro.KEY.d:\n            case cc.macro.KEY.right:\n                this.accLeft = false;\n                this.accRight = true;\n                break;\n        }\n    },\n\n    onKeyUp (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n            case cc.macro.KEY.left:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.d:\n            case cc.macro.KEY.right:\n                this.accRight = false;\n                break;\n        }\n    },\n\n    onTouchStart (event) {\n        var touchLoc = event.getLocation();\n        if (touchLoc.x >= cc.winSize.width/2) {\n            this.accLeft = false;\n            this.accRight = true;\n        } else {\n            this.accLeft = true;\n            this.accRight = false;\n        }\n    },\n\n    onTouchEnd (event) {\n        this.accLeft = false;\n        this.accRight = false;\n    },\n\n    setJumpAction: function () {\n        // 跳跃上升\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        // 下落\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n        // 形变\n        var squash = cc.scaleTo(this.squashDuration, 1, 0.6);\n        var stretch = cc.scaleTo(this.squashDuration, 1, 1.2);\n        var scaleBack = cc.scaleTo(this.squashDuration, 1, 1);\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\n        var callback = cc.callFunc(this.playJumpSound, this);\n        // 不断重复，而且每次完成落地动作后调用回调来播放声音\n        return cc.repeatForever(cc.sequence(squash, stretch, jumpUp, scaleBack, jumpDown, callback));\n    },\n\n    playJumpSound: function () {\n        // 调用声音引擎播放声音\n        cc.audioEngine.playEffect(this.jumpAudio, false);\n    },\n\n    getCenterPos: function () {\n        var centerPos = cc.v2(this.node.x, this.node.y + this.node.height/2);\n        return centerPos;\n    },\n\n    startMoveAt: function (pos) {\n        this.enabled = true;\n        this.xSpeed = 0;\n        this.node.setPosition(pos);\n        this.node.runAction(this.setJumpAction());\n    },\n\n    stopMove: function () {\n        this.node.stopAllActions();\n    },\n\n    // called every frame\n    update: function (dt) {\n        // 根据当前加速度方向每帧更新速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // 限制主角的速度不能超过最大值\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n        this.node.x += this.xSpeed * dt;\n\n        // limit player position inside screen\n        if ( this.node.x > this.node.parent.width/2) {\n            this.node.x = this.node.parent.width/2;\n            this.xSpeed = 0;\n        } else if (this.node.x < -this.node.parent.width/2) {\n            this.node.x = -this.node.parent.width/2;\n            this.xSpeed = 0;\n        }\n    },\n});\n"]}